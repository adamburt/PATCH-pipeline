#PATCH RNA-seq script 
for sample in sample_directory
do
    echo ${sample}
    cd ${sample}
    ## Check if the bam file is single or paired end if single ended run the following  
    if [ $(samtools view -c -f 1 *.bam) == 0 ]
    then 
        #Convert bam file to fastq format using bedtools
        bedtools bamtofastq -i *.bam -fq ${sample}.fq

        echo ${sample} bam to fastq finished 

        #Check quality of fastq file using fastqc
        mkdir fastqc
        fastqc ${sample}.fq --outdir /home/radhika/rna_seq/colorectal/${sample}/fastqc

        #Trim the fastq file with trimmomatic
        . /home/radhika/datadrive/tools/spack/share/spack/setup-env.sh
        spack load trimmomatic
        trimmomatic SE -phred33 \
            ${sample}.fq \
            ${sample}_trimmed.fq \
            LEADING:28 TRAILING:28 SLIDINGWINDOW:4:28 MINLEN:28

        #Check quality of fastq file post trimming
        fastqc ${sample}_trimmed.fq --outdir /home/radhika/rna_seq/colorectal/${sample}/fastqc

        #Align trimmed fastq files to the human ref genome GRCh38 using hisat2
        hisat2 -x /home/radhika/datadrive/GRCh38/index/GRCh38_index \
			--known-splicesite-infile /home/radhika/datadrive/GRCh38/index/GRCh38_splice_sites.txt   \
			-p 6 \
			-U ${sample}_28_trimmed.fq | samtools view -bS - > ${d}.hisat.bam 

		echo ${sample} Hisat2 alignment finished 

		#Extract "unmapped"/ non-human reads using samtools flags
		samtools view -F 4 ${sample}.hisat.bam > ${sample}_unmapped.bam

		echo ${sample} Unmapped extracted

		#Sort the bam file using samtools
		samtools sort ${sample}_unmapped.bam > ${sample}_unmapped_sorted.bam

		#Convert bam file to fastq format using bedtools
		bedtools bamtofastq -i ${sample}_unmapped_sorted.bam -fq ${sample}_unmapped.fq

		echo ${sample} Unmapped bam to fastq

		#Denovo assemlbly of unmapped reads using SPAdes
		rnaspades.py -s ${sample}_unmapped_S.fq --only-assembler -o spades

		#Using 
		mkdir centrifuge
		cd centrifuge
		centrifuge -x /home/radhika/datadrive/centrifuge/p_compressed+h+v \
			-f ../spades/transcripts.fasta \
			--report-file ${sample}_report.txt -S ${sample}_results_centrifuge.txt

		grep -e 'Fusobacterium' ${sample}_report.txt | awk '{print $3}' | sort | uniq > taxid_list.txt
		awk -F' ' 'NR==FNR{c[$1]++;next};c[$3]' list.txt ${sample}_results_centrifuge.txt | awk '{print $1}' | sort | uniq > nodes.txt

		if [[ -s nodes.txt ]] ; then
    		seqtk subseq ../spades/transcripts.fasta nodes.txt > Fuso_seq.fasta
		fi

		if [[ -s nodes.txt ]] ; then
			blastn -db /home/radhika/datadrive/cdna_ensembl/human_host/all_fuso/blast_db/fuso_cdna \
			-query Fuso_seq.fasta \
			-perc_identity 90 \
			-evalue 1e-20 \
			-num_threads 14 \
			-max_target_seqs 1 \
			-outfmt 10 > fuso_genes.csv
		fi


		cd ../

		mkdir blastn
		cd blastn

		if [[ -s nodes.txt ]] ; then
    		seqtk subseq ../spades/transcripts.fasta nodes.txt > Fuso_seq.fasta
		fi
        
        if [[ -s nodes.txt ]] ; then
		blastn -db /home/radhika/datadrive/blast_nt/nt \
			-query ../spades/transcripts.fasta \
			-perc_identity 90 \
			-evalue 1e-20 \
			-out=${d}_unmapped_blastn.csv \
			-max_target_seqs 1 \
			-outfmt '10 qseqid sseqid evalue bitscore sgi sacc sscinames scomnames sskingdoms stitle'

    	fi

    	if [[ -s nodes.txt ]] ; then
			blastn -db /home/radhika/datadrive/cdna_ensembl/human_host/all_fuso/blast_db/fuso_cdna \
			-query Fuso_seq.fasta \
			-perc_identity 90 \
			-evalue 1e-20 \
			-num_threads 14 \
			-max_target_seqs 1 \
			-outfmt 10 > fuso_genes.csv
		fi

    cd ../../

    else
    	samtools sort -n *.bam | bedtools bamtofastq -i stdin -fq ${sample}_F1.fq -fq2 ${sample}_F2.fq
    	echo ${sample}_F1 bam to fastq finished 
    	fastqc ${sample}_F1.fq --outdir fastqc
    	fastqc ${sample}_F2.fq --outdir fastqc

    	java -jar /rna_seq/tools/Trimmomatic-0.39/trimmomatic-0.39.jar PE \
		    ${d}_F1.fq \
		    ${d}_F2.fq \
		    ${d}_trimmed_F1_trial.fq \
		    ${d}_trimmed_F1_UP_trial.fq \
		    ${d}_trimmed_F2_trial.fq \
		    ${d}_trimmed_F2_UP_trial.fq \
		    LEADING:28 TRAILING:28 SLIDINGWINDOW:4:28 MINLEN:28

		fastqc ${sample}_trimmed_F1.fq --outdir fastqc
		fastqc ${sample}_trimmed_F2.fq --outdir fastqc

		hisat2 -x /home/radhika/datadrive/GRCh38/index/GRCh38_index \
			--known-splicesite-infile /home/radhika/datadrive/GRCh38/index/GRCh38_splice_sites.txt   \
			-1 ${sample}_trimmed_F1.fq -2 ${sample}_trimmed_F2.fq | samtools view -bS - > ${sample}_PE.bam 

		samtools sort ${sample}_PE.bam -o ${sample}_sorted_PE.bam 

		samtools view -b -f 4 ${sample}_sorted_PE.bam > ${sample}_unmapped_PE.bam

		samtools sort -n ${sample}_unmapped_PE.bam | bedtools bamtofastq -i stdin -fq ${sample}_unmapped_F1.fq -fq2 ${sample}_unmapped_trial.fq

		rnaspades.py -1 ${sample}_unmapped_F1.fq -2 ${sample}_unmapped_F1.fq --only-assembler -o spades

		mkdir centrifuge
		cd centrifuge
		centrifuge -x /home/radhika/datadrive/centrifuge/p_compressed+h+v \
			-f ../spades/transcripts.fasta \
			--report-file ${sample}_report.txt -S ${sample}_results_centrifuge.txt

		grep -e 'Fusobacterium' ${sample}_report.txt | awk '{print $3}' | sort | uniq > list.txt
		awk -F' ' 'NR==FNR{c[$1]++;next};c[$3]' list.txt ${sample}_results_centrifuge.txt | awk '{print $1}' | sort | uniq > nodes.txt
        
		if [[ -s nodes.txt ]] ; then
    		seqtk subseq ../spades/transcripts.fasta nodes.txt > Fuso_seq.fasta
		fi
		cd ../

		mkdir blastn
		cd blastn
        
		blastn -db /home/radhika/datadrive/blast_nt/nt \
			-query ../spades/transcripts.fasta \
			-perc_identity 90 \
			-evalue 1e-20 \
			-out=${d}_unmapped_blastn.csv \
			-max_target_seqs 1 \
			-outfmt '10 qseqid sseqid evalue bitscore sgi sacc sscinames scomnames sskingdoms stitle'

    	fi

    cd ../
done
